<Application x:Class="CarRental.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CarRental.UI"
             xmlns:vm="clr-namespace:CarRental.UI.ViewModels"
             xmlns:viewModels="clr-namespace:CarRental.UI.ViewModels"
             xmlns:views="clr-namespace:CarRental.UI.Views"
             xmlns:driverViewModels="clr-namespace:CarRental.UI.ViewModels.DriverViewModels"
             xmlns:adminViewModels="clr-namespace:CarRental.UI.ViewModels.AdminViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:driverViews="clr-namespace:CarRental.UI.Views.DriverViews"
             xmlns:adminViews="clr-namespace:CarRental.UI.Views.AdminViews"
             StartupUri="Views/LoginView.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- primary color -->
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary
                            Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Indigo.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/materialdesigncolor.green.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
                            include three hues from the primary palette (and the associated forecolours).
                            Do not rename, keep in sequence; light to dark.
                        -->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}" />
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush"
                                     Color="{StaticResource Primary100Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush"
                                     Color="{StaticResource Primary700Foreground}" />
                </ResourceDictionary>

                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary
                            Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <!-- include a single secondary accent color (and the associated forecolour) -->
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}" />
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush"
                                     Color="{StaticResource Accent200Foreground}" />
                </ResourceDictionary>
                

            </ResourceDictionary.MergedDictionaries>
            <viewModels:ViewModelLocator x:Key="Locator" />
            <DataTemplate DataType="{x:Type driverViewModels:DriverRentalsViewModel}">
                <driverViews:DriverRentalsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type driverViewModels:RentCarViewModel}">
                <driverViews:RentCarView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type driverViewModels:ActiveRentalSessionViewModel}">
                <driverViews:ActiveRentalSessionView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type driverViewModels:DriverAccountViewModel}">
                <driverViews:DriverAccountView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:RegisterDriverViewModel}">
                <views:RegisterDriverView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminViewModels:AdminMainViewModel}">
                <adminViews:AdminMainView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminViewModels:CarsManagementViewModel}">
                <adminViews:CarsManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminViewModels:DriversManagementViewModel}">
                <adminViews:DriversManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminViewModels:RentalsManagementViewModel}">
                <adminViews:RentalsManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminViewModels:RentalAreaManagementViewModel}">
                <adminViews:RentalAreaManagementView />
            </DataTemplate>
            <Style x:Key="TabHeaderIcon" TargetType="{x:Type materialDesign:PackIcon}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True">
                        <Setter Property="Foreground" Value="#FF4CAF50"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False">
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

    </Application.Resources>

</Application>